skills:
  lang:
    - TypeScript / JavaScript
    - Go
    - Rust
    - C / C++
    - HTML / CSS / SCSS
  tech:
    - Kubernetes / Docker
    - Helm / Kustomize / FluxCD
    - React / React Native
    - NGINX
    - PostgreSQL
    - REST / GraphQL
  tools:
    - Git
    - Linux
    - Vim / Neovim / Tmux
    - LaTeX

experience:
  - company: SaaSquatch
    location: Victoria, Canada
    print: true
    time: Jan 2019 - Apr 2020, Aug 2022 - present
    title: Software Engineer
    website: https://www.saasquatch.com
    roles:
      - Currently working on backend, infrastructure, and DevOps teams
      - Spearheaded the adoption of containerization technology at SaaSquatch, specifically
        Docker and Kubernetes (GKE)
      - Developed core logic for the SaaSquatch Growth Automation platform with using
        Express, Heroku, and Contentful
      - Implemented a new frontend build process from scratch using Babel & Webpack, adding
        TypeScript support and cutting build times in half
      - Helped migrate the SaaSquatch analytics backend from Keen to BigQuery, including
        a custom query server to translate Keen API calls into BigQuery SQL

  - company: Dyspatch
    location: Victoria, Canada
    print: true
    time: Sep 2021 - Apr 2022
    title: Software Developer
    website: https://www.dyspatch.io/
    roles:
      - Implemented an improved version of Dyspatch's internal one-click Kubernetes deployment
        & monitoring tool
      - Connected Rancher, GitHub, S3, DynamoDB, and Slack APIs for a cohesive and polished
        deployment experience
      - Reverse engineered Rancher CLI to enable making Kubernetes deployments through
        their un-documented API
      - Implemented high-availability distributed GraphQL subscriptions with Apollo and
        Redis

  - company: Launchcode
    location: Calgary, Canada
    print: true
    time: Sep 2020 - Apr 2021
    title: Software Developer
    website: https://lc.dev
    roles:
      - Developed core business logic for the PatronScan ID Scanner product
      - Implemented a faster and more reliable ID detection algorithm using OpenCV and
        Rust
      - Built a responsive web frontend for Launchcode's "Enjoyn" product using React
        & Chakra
      - Implemented core video and audio conferencing features for the Enjoyn Android
        app

  - company: Bickert Robotics
    location: Calgary, Canada
    print: false
    time: Apr 2018 - Sep 2018
    title: Robotics Software Technician
    roles:
      - Developed a software suite to power Bickert Robotics' automated bartender robot
      - Implemented a REST API using Go and PostgreSQL for managing drink recipes, ingredients,
        robot configurations, and customer credentials
      - Developed an Android app for directly controlling the robot using Java and the
        Android SDK
      - Designed a web app for viewing / editing drinks, users, and tanks using React.
        Included page for viewing the drink queue on the robot's embedded display
      - Wrote embedded Python code to receive user input and autonomously pour drinks
        based on JSON recipe data

projects:
  - title: PipeWire Orchestrator
    github: pipewire-orchestrator
    print: true
    stack: TypeScript
    time: "2022"
    roles:
      - PipeWire Orchestrator is a background daemon that performs several audio and MIDI-related
        tasks on Linux
      - Performs MIDI processing and mapping based on configuration rules
      - Provides PipeWire connection graph monitoring tools and rules
      - Implements basic JACK LV2 plugin host functionality
      - Configured with either JSON or YAML including automatic runtime validation

  - title: puggies
    github: puggies
    print: true
    stack: Go / React
    time: "2022"
    roles:
      - Puggies is a self-hosted CS:GO demo analyzer and statistics platform
      - Automatically parses CS:GO demos to extract statistics such as k/a/d, K/D, ADR,
        HS%, HLTV, RWS and many more
      - Supports demos from Valve MM, FACEIT, ESEA, and pugsetup
      - Uses docker-first containerized deployment method for easy setup and upgrades
      - Includes a beautiful and fast interface designed with React and Chakra

  - title: bblp
    print: true
    stack: Rust
    time: "2021"
    github: bblp
    roles:
      - bblp is an implementation of the Revised Simplex Method for solving Linear Programs
      - Uses the linear algebraic Revised Simplex Method for computing an optimal solution
        to a linear function and set of constraints
      - Includes both primal and dual solvers with the two-phase primal-dual method for
        initially-infeasible problems
      - Implements the largest coefficient pivoting rule with lexicographic perturbation
        for cycle avoidance

  - title: nit
    print: true
    stack: Rust
    time: "2019"
    github: nit
    roles:
      - Nit is a physically-based raytracer built with Rust
      - Uses a Monte-Carlo path-tracing approach to rendering realistic scenes based on
        the physical properties of light
      - Implements a sub-linear collision detection algorithm with a Bounding-Volume Hierarchy
      - Supports loading polygon meshes from STL files
      - Parallelized across any number of CPU cores

  - title: Battlesnake
    github: battlesnake-2020
    print: false
    stack: Rust / Go
    time: 2019-2020
    roles:
      - Developed an artificial intelligence to compete in the Battlesnake programming
        competition
      - Uses parallel Monte-Carlo Tree Search for assessing future game states
      - Implemented a variety of other common algorithms for use in the Monte-Carlo rollout
        phase
      - Created a moving-average analyzer to match other snakes' behavior to a profile

  - title: UVic ENGR 120 Design Project
    github: ENGR120-Vex
    time: "2018"
    stack: C
    print: false
    roles:
      - Designed and built a small prototype robot for connecting wires on the ocean floor
      - Created and programmed a rotating photosensor mechanism to detect the attachment
        point
      - Implemented PID and slew rate controllers for quickly and smoothly driving to
        the attachment point
      - Placed 1st in a course-wide competition with an average connection time of 5.99
        seconds

awards:
  - desc: Western Engineering Competition (Programming)
    print: true
    result: Winner
    time: "2020"
  - desc: UVic Engineering Competition (Programming)
    print: true
    result: Winner
    time: 2018, 2019
  - desc: UVic ENGR 120 Design Competition
    print: true
    result: Winner
    time: "2018"
  - desc: Western Canada Regional Robotics Competition
    print: true
    result: Winner
    time: "2016"
  - desc: China Robotics Challenge
    print: false
    result: Winner
    time: "2016"
  - desc: Western Canada Regional Robotics Competition
    print: false
    result: Innovation in Control Award
    time: 2015, 2016

interests:
  - Free Software / self-hosting
  - Coffee / cooking
  - Mechanical keyboards
  - Gaming
  - Formula 1
